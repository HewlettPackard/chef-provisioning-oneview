# See http://docs.chef.io/config_rb_knife.html for more information on knife configuration options
current_dir = File.dirname(__FILE__)

#=============================================================================
# Edit these attributes:
#=============================================================================
my_chef_server_url         = "https://chef-server.domain.com/organizations/oneview"

node_name                    "CLIENT_NAME"
client_key                   "#{current_dir}/CLIENT_NAME.pem" # Must have node & client creation privileges (ie admin group)

validation_client_name       "oneview-validator"
validation_key               "#{current_dir}/oneview-validator.pem"

knife[:oneview_url]        = 'https://my-oneview.my-domain.com'
knife[:oneview_username]   = 'Administrator'
knife[:oneview_password]   = 'password123'
knife[:oneview_ignore_ssl] = true

knife[:icsp_url]           = 'https://my-icsp.my-domain.com'
knife[:icsp_username]      = 'Administrator'
knife[:icsp_password]      = 'password123'
knife[:icsp_ignore_ssl]    = true

knife[:node_root_password] = 'password123'
knife[:node_root_ssh_keys] = ['~/.ssh/id_rsa']

# For self-signed Chef server cert
verify_api_cert              false
ssl_verify_mode              :verify_none

# If you're behind a proxy
my_proxy = 'http://proxy.domain.com:8080'

# Define your infrastructure here. This info gets populated into the recipe. Leave blank if you want to edit the recipe directly.
# Recipe location: chef-provisioning-oneview/examples/cookbooks/provisioning_cookbook/recipes/default.rb
knife[:example_recipe_options] = {
  'action'      => :converge,  # :allocate, :ready, :stop, and :destroy are other options
  'os_build'    => 'CHEF-RHEL-6.5-x64',
  'template'    => 'Template - Web Server',
  'gateway'     => 'xx.xx.xx.xx',
  'dns'         => 'xx.xx.xx.xx',
  'domain_name' => 'oneview-domain.com',
  'mask'        => '255.255.254.0',
  'my_machines' => {
    'chef-web01' => {
      'ip4' => 'xxx.xx.xx.xx'
    },
    'chef-web02' => {
      'dhcp' => true
    }
  }
}
#=============================================================================






log_level                :info
log_location             STDOUT
cache_type               'BasicFile'
cache_options( :path => "#{ENV['HOME']}/.chef/checksums" )
cookbook_path            ["#{current_dir}/../cookbooks"]
chef_server_url          my_chef_server_url
knife[:my_chef_server] = my_chef_server_url
if my_proxy
  http_proxy             my_proxy
  https_proxy            my_proxy
  knife[:bootstrap_proxy] = my_proxy
end
